from dash import html, dcc

# ============================================================================== FONCTIONS PRINCIPALES  ======================================================================================

# =====EN-T√ãTE PRINCIPALE=====
def create_header():
    """Cr√©e l'en-t√™te principal avec une introduction narrative captivante."""
    return html.Div([
        html.H1(
            "L'Impact des √âv√©nements Socio-Politiques sur les March√©s Financiers",
            style={'textAlign':'center','marginBottom':'30px', 'color': '#2c3e50'}
        ),
        
        html.Div(className='intro-section', style={
            'textAlign':'center',
            'marginBottom':'50px'
        }, children=[
            html.P([
                "De 2008 √† 2023, notre monde a √©t√© secou√© par des √©v√©nements majeurs : ",
                "crises financi√®res, pand√©mies, guerres, bouleversements politiques. Mais ",
                html.Em("comment ces chocs ont-ils r√©ellement impact√©"), " les march√©s financiers mondiaux ?"
            ], style={'fontSize':'20px','lineHeight':'1.7','color':'#2c3e50', 'marginBottom': '20px'}),
            
            html.P([
                "Embarquez dans une exploration interactive qui r√©v√®le les r√©actions ",
                "surprenantes des investisseurs face √† l'incertitude. Des volumes d'√©change aux rendements, ",
                "de la volatilit√© aux diff√©rences r√©gionales, d√©couvrez ", html.Em("l'anatomie des chocs financiers"), "."
            ], style={'fontSize':'16px','lineHeight':'1.6','color':'#636e72', 'marginBottom': '30px'}),
            
            # Section statistiques d√©taill√©es
            html.Div(className='stats-detailed', style={
                'marginTop':'40px',
                'padding': '30px',
                'backgroundColor': '#f8f9fa',
                'borderRadius': '15px',
                'boxShadow': '0 4px 6px rgba(0,0,0,0.05)'
            }, children=[
                
                # Titre de la section
                html.H3("üìä Panorama de notre exploration", style={
                    'textAlign': 'center',
                    'marginBottom': '30px',
                    'color': '#2c3e50',
                    'fontSize': '24px'
                }),
                
                # Grille des d√©tails
                html.Div(style={
                    'display': 'grid',
                    'gridTemplateColumns': 'repeat(auto-fit, minmax(300px, 1fr))',
                    'gap': '25px',
                    'marginBottom': '20px'
                }, children=[
                    
                    # √âv√©nements d√©taill√©s avec tooltips
                    html.Div(style={
                        'backgroundColor': 'white',
                        'padding': '25px',
                        'borderRadius': '12px',
                        'boxShadow': '0 2px 4px rgba(0,0,0,0.08)',
                        'borderLeft': '4px solid #e74c3c'
                    }, children=[
                        html.H4("üåç √âv√©nements analys√©s", style={
                            'color': '#e74c3c',
                            'marginBottom': '15px',
                            'fontSize': '18px'
                        }),
                        html.P("10 chocs majeurs qui ont marqu√© l'histoire :", style={
                            'fontSize': '14px',
                            'marginBottom': '12px',
                            'color': '#7f8c8d'
                        }),
                        html.Ul([
                            _create_event_item("Crise Lehman Brothers (2008)", "Faillite de la 4√®me banque d'investissement am√©ricaine, d√©clenchant la crise financi√®re mondiale"),
                            _create_event_item("Crise dette zone euro (2010)", "Crise de la dette souveraine en Europe, mena√ßant la stabilit√© de l'euro et de l'Union europ√©enne"),
                            _create_event_item("Printemps arabe (2010)", "Vague de r√©volutions d√©mocratiques au Moyen-Orient √† l'origine d'une instabilit√© g√©opolitique majeure"),
                            _create_event_item("Fukushima (2011)", "Catastrophe nucl√©aire au Japon suite au tsunami qui a remit en question l'√©nergie nucl√©aire mondiale"),
                            _create_event_item("Brexit (2016)", "R√©f√©rendum britannique pour quitter l'UE, laissant derri√®re lui une incertitude √©conomique et politique durable"),
                            _create_event_item("√âlection Trump (2016)", "Victoire surprise cr√©ant des incertitudes sur les politiques commerciales et g√©opolitiques am√©ricaines"),
                            _create_event_item("Guerre commerciale US-CN (2018)", "Escalade des tarifs douaniers entre les deux premi√®res √©conomies mondiales"),
                            _create_event_item("Assassinat Soleimani (2020)", "√âlimination du g√©n√©ral iranien et risque d'un conflit militaire au Moyen-Orient"),
                            _create_event_item("COVID-19 (2020)", "Pand√©mie mondiale provoquant des confinements et la plus grave r√©cession depuis 1929"),
                            _create_event_item("Invasion Ukraine (2022)", "Guerre en Europe qui a relanc√© les tensions g√©opolitiques et cr√©√© une crise √©nerg√©tique")
                        ], style={
                            'fontSize': '13px',
                            'lineHeight': '1.4',
                            'paddingLeft': '18px',
                            'color': '#2c3e50',
                            'listStyle': 'none'
                        })
                    ]),
                    
                    # Indices d√©taill√©s avec tooltips
                    html.Div(style={
                        'backgroundColor': 'white',
                        'padding': '25px',
                        'borderRadius': '12px',
                        'boxShadow': '0 2px 4px rgba(0,0,0,0.08)',
                        'borderLeft': '4px solid #3498db'
                    }, children=[
                        html.H4("üìà Indices surveill√©s", style={
                            'color': '#3498db',
                            'marginBottom': '15px',
                            'fontSize': '18px'
                        }),
                        html.P("12 barom√®tres des march√©s mondiaux :", style={
                            'fontSize': '14px',
                            'marginBottom': '12px',
                            'color': '#7f8c8d'
                        }),
                        html.Ul([
                            _create_index_item("Shanghai Composite (000001.SS)", "Indice composite de Shanghai, reflet du march√© chinois"),
                            _create_index_item("BSE Sensex (^BSESN)", "Plus ancien indice indien, barom√®tre historique de la Bourse de Bombay"),
                            _create_index_item("Nifty 50 (^NSEI)", "Indice principal de la Bourse nationale indienne, 50 plus grandes capitalisations"),
                            _create_index_item("Nikkei 225 (^N225)", "Principal indice japonais, indicateur de la 3√®me √©conomie mondiale"),
                            _create_index_item("Dow Jones (^DJI)", "Plus ancien indice am√©ricain, suit 30 entreprises industrielles embl√©matiques"),
                            _create_index_item("S&P 500 (^GSPC)", "Indice des 500 plus grandes entreprises am√©ricaines, r√©f√©rence mondiale"),
                            _create_index_item("NASDAQ Composite (^IXIC)", "Indice technologique am√©ricain regroupant toutes les entreprises du NASDAQ"),
                            _create_index_item("NYSE Composite (^NYA)", "Indice composite de la Bourse de New York, refl√©tant l'ensemble du march√© am√©ricain"),     
                            _create_index_item("FTSE 100 (^FTSE)", "Indice des 100 plus grandes entreprises britanniques cot√©es √† Londres"),                     
                            _create_index_item("Euronext 100 (^N100)", "Indice paneurop√©en des 100 plus grandes entreprises d'Europe"),                          
                            _create_index_item("Or Futures (GC=F)", "Contrats √† terme sur l'or, valeur refuge traditionnelle contre l'inflation"),
                            _create_index_item("P√©trole Futures (CL=F)", "Contrats √† terme sur le p√©trole brut, indicateur g√©opolitique crucial")
                        ], style={
                            'fontSize': '13px',
                            'lineHeight': '1.4',
                            'paddingLeft': '18px',
                            'color': '#2c3e50',
                            'listStyle': 'none'
                        })
                    ]),
                                          
                ])
            ])

        ])
    ])

# =====VIS 1) VOLUME=====
def create_volume_section(tickers_list):
    """Premi√®re √©tape du storytelling : vue d'ensemble par le volume."""
    return html.Div(className='viz-section', children=[
        html.H2("Commen√ßons par le commencement : L'activit√© des march√©s"),
        
        html.Div(className='section-intro', style={
            'backgroundColor': '#f8f9fa',
            'padding': '25px',
            'borderRadius': '10px',
            'marginBottom': '30px',
            'borderLeft': '5px solid #0984e3'
        }, children=[
            html.P([
                "Notre voyage d√©bute par une d√©couverte int√©ressante : contrairement aux id√©es re√ßues, ",
                "les ", html.Em("crises ne paralysent pas"), " les march√©s. Au contraire ! Elles les √©lectrisent."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6', 'fontSize': '16px'}),
            
            html.P([
                "Le volume d'√©change - ce nombre d'actions qui changent de mains chaque jour - ",
                "devient notre premi√®re boussole. Quand l'incertitude frappe, les investisseurs ne fuient pas : ",
                "ils ", html.Em("r√©agissent massivement"), ". Ventes de panique et achats strat√©giques s'entrem√™lent."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6'}),
            
            html.P([
                "üìä Cette visualisation polaire condense 15 ann√©es d'histoire financi√®re ",
                " en un cercle hypnotique. Chaque pic r√©v√®le un moment o√π le monde a retenu son souffle..."
            ], style={'marginBottom': '0', 'fontSize': '15px', 'color': '#636e72', 'fontStyle': 'italic'})
        ]),

        _create_volume_controls(tickers_list),
        dcc.Graph(id='volume-chart')
    ])

# =====VIS 2) HEATMAP DES RENDEMENTS=====
def create_heatmap_section(events_list):
    """Deuxi√®me √©tape : plong√©e dans le d√©tail des rendements."""
    return html.Div(className='viz-section', children=[
        html.H2("Maintenant, plongeons dans l'intimit√© des march√©s"),

        html.Div(className='section-intro', style={
            'backgroundColor': '#f8f9fa',
            'padding': '25px',
            'borderRadius': '10px',
            'marginBottom': '30px',
            'borderLeft': '5px solid #e17055'
        }, children=[
            html.P([
                "Le volume nous a montr√© ", html.Em("quand"), " les march√©s s'agitent. Mais que se passe-t-il ",
                "concr√®tement ? Cette heatmap r√©v√®le l'anatomie pr√©cise des chocs financiers."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6', 'fontSize': '16px'}),
            
            html.P([
                "Imaginez pouvoir remonter le temps et observer, jour par jour, comment chaque ",
                "indice mondial a r√©agi. Du rouge sang des pertes catastrophiques au ",
                "vert espoir des rebonds spectaculaires, chaque cellule raconte une histoire."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6'}),
            
            html.P([
                "üéØ La ligne verticale marque le ", html.Em("jour J"), " - l'instant o√π tout bascule. ",
                "Observez comment l'onde de choc se propage, et les patterns cach√©s ",
                " des r√©actions en cha√Æne."
            ], style={'marginBottom': '0', 'fontSize': '15px', 'color': '#636e72', 'fontStyle': 'italic'})
        ]),
        
        _create_heatmap_controls(events_list),
        dcc.Graph(id='heatmap-chart')
    ])

# =====VIS 3) VOLATILITE=====
def create_volatility_section(events_list):
    """Troisi√®me √©tape : exploration de l'incertitude."""
    return html.Div(className='viz-section', children=[
        html.H2("Allons plus loin : Mesurer la peur des investisseurs"),

        html.Div(className='section-intro', style={
            'backgroundColor': '#f8f9fa',
            'padding': '25px',
            'borderRadius': '10px',
            'marginBottom': '30px',
            'borderLeft': '5px solid #a29bfe'
        }, children=[
            html.P([
                "Les rendements nous ont r√©v√©l√© les ", html.Em("gains et pertes"), ". Mais comment mesurer ",
                "l'angoisse des march√©s ? Bienvenue dans l'univers de la volatilit√© !"
            ], style={'marginBottom': '15px', 'lineHeight': '1.6', 'fontSize': '16px'}),
            
            html.P([
                "La volatilit√© capture quelque chose d'invisible mais crucial : le ",
                html.Em("niveau de stress"), " des investisseurs. Plus les cours zigzaguent violemment, ",
                "plus l'incertitude r√®gne. C'est le pouls des march√©s financiers."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6'}),
            
            html.P([
                "üåä Chaque courbe trace l'√©volution de cette nervosit√©. Observez les pics d'anxi√©t√© ",
                " qui pr√©c√®dent ou suivent les √©v√©nements, r√©v√©lant que parfois, ",
                html.Em("l'anticipation fait plus mal que la r√©alit√©"), "..."
            ], style={'marginBottom': '0', 'fontSize': '15px', 'color': '#636e72', 'fontStyle': 'italic'})
        ]),
        
        _create_volatility_controls(events_list),
        dcc.Graph(id='volatility-chart')
    ])

# ====== VIS 4) CHOROPLETH ===
def create_choropleth_section(events_list):
    """Derni√®re √©tape : vision g√©ographique finale."""
    return html.Div(className='viz-section', children=[
        html.H2(" Prenons maintenant de la hauteur : Le monde face √† la crise"),

        html.Div(className='section-intro', style={
            'backgroundColor': '#f8f9fa',
            'padding': '25px',
            'borderRadius': '10px',
            'marginBottom': '30px',
            'borderLeft': '5px solid #00b894'
        }, children=[
            html.P([
                "üåç prenons de la hauteur ! Cette carte mondiale ",
                "r√©v√®le une le√ßon fondamentale de l'√©conomie globalis√©e : ", 
                html.Em("la g√©ographie compte encore"), "."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6', 'fontSize': '16px'}),
            
            html.P([
                "Quand l'Ukraine est envahie, l'Europe souffre mais l'Am√©rique r√©siste. ",
                "Quand Wall Street s'effondre, le monde entier tremble. Cette carte raconte l'histoire des ",
                html.Em("interconnexions"), " et des vuln√©rabilit√©s r√©gionales."
            ], style={'marginBottom': '15px', 'lineHeight': '1.6'}),
            
            
            html.P([
                "‚ú® ", html.Em("Votre exploration touche √† sa fin"), ". Vous avez d√©sormais les cl√©s pour ",
                "comprendre comment les march√©s financiers respirent au rythme du monde."
            ], style={'marginBottom': '0', 'fontSize': '15px', 'color': '#636e72', 'fontStyle': 'italic'})
        ]),
        
        _create_choropleth_controls(events_list),
        dcc.Graph(id='choropleth-chart')
        
    ])

# ====== VIS 5) COMPARE ===
def create_compare_section(categories_list):
    """Avant-derni√®re √©tape : synth√®se comparative."""
    return html.Div(className='viz-section', children=[
        html.H2("‚öñÔ∏è Pour conclure notre exploration : La grande comparaison"),

        html.Div(className='section-intro', style={
            'backgroundColor': '#f8f9fa',
            'padding': '25px',
            'borderRadius': '10px',
            'marginBottom': '30px',
            'borderLeft': '5px solid #fd79a8'
        }, children=[
            html.P([
                " Nous avons explor√© le ", html.Em("quand"), ", le ", html.Em("comment"), " et le ", html.Em("combien"), 
                ". Mais voici la question ultime : tous les chocs se valent-ils ?"
            ], style={'marginBottom': '15px', 'lineHeight': '1.6', 'fontSize': '16px'}),
            
            html.P([
                "Cette visualisation r√©v√®le une v√©rit√© surprenante : crises sanitaires, ",
                "tensions g√©opolitiques, bouleversements politiques et ",
                "krachs financiers n'affectent pas les march√©s de la m√™me mani√®re !"
            ], style={'marginBottom': '15px', 'lineHeight': '1.6'}),
            
            html.P([
                "üîç D√©couvrez qui remporte la palme du ", html.Em("chaos maximal"), " et observez comment ",
                "les mati√®res premi√®res (or, p√©trole) dansent diff√©remment des ",
                "indices boursiers face √† l'adversit√©."
            ], style={'marginBottom': '0', 'fontSize': '15px', 'color': '#636e72', 'fontStyle': 'italic'})
        ]),
        
        _create_compare_controls(categories_list),
        dcc.Graph(id='compare-chart'),

               # Conclusion finale
        html.Div(style={
            'backgroundColor': '#2c3e50',
            'color': 'white',
            'padding': '30px',
            'borderRadius': '10px',
            'marginTop': '40px',
            'textAlign': 'center'
        }, children=[
            html.H3("üöÄ Votre voyage dans l'univers des march√©s financiers s'ach√®ve ici", 
                   style={'marginBottom': '20px', 'color': '#74b9ff'}),
            html.P([
                "Vous avez d√©couvert comment 10 √©v√©nements majeurs ont fa√ßonn√© ",
                "16 ann√©es d'histoire financi√®re. De la panique aux opportunit√©s, ",
                "des volumes aux rendements, vous ma√Ætrisez d√©sormais ", 
                html.Em("l'art de lire les √©motions des march√©s"), "."
            ], style={'fontSize': '16px', 'lineHeight': '1.6', 'marginBottom': '20px'}),
            html.P([
                "üí° La prochaine fois qu'un √©v√©nement mondial fera trembler les march√©s, ",
                "vous saurez d√©crypter les signaux et comprendre que derri√®re chaque ",
                "courbe se cache une histoire humaine fascinante."
            ], style={'fontSize': '14px', 'lineHeight': '1.5', 'color': '#ddd'})
        ])
    ])


# ============================================================================== FONCTIONS DE CONTR√îLES  ======================================================================================

#===== CONTR√îLES POUR LA VISUALISATION DU VOLUME  =====
def _create_volume_controls(tickers_list):
    """Contr√¥les pour la visualisation volume : dropdown + slider."""
    return html.Div(className='control-group', style={'marginBottom': '30px'}, children=[
        
        # Selection d'indice
        html.Div(style={
            'display': 'flex',
            'justifyContent': 'center',
            'alignItems': 'center',
            'gap': '15px',
            'marginBottom': '25px',
            'padding': '15px',
            'backgroundColor': 'white',
            'borderRadius': '8px',
            'boxShadow': '0 2px 4px rgba(0,0,0,0.05)'
        }, children=[
            html.Label("Indice explor√© :", style={
                'fontWeight': '500',
                'color': '#495057',
                'fontSize': '15px'
            }),
            dcc.Dropdown(
                id='ticker-dropdown',
                options=_create_ordered_ticker_options(tickers_list),
                value=_get_first_available_ticker(tickers_list),
                clearable=False,
                style={'width': '350px', 'fontSize': '14px'}  # Plus large pour les noms complets
            ),
        ]),

        # Slider de lissage avec description
        html.Div(style={
            'backgroundColor': 'white',
            'padding': '20px',
            'borderRadius': '8px',
            'boxShadow': '0 2px 4px rgba(0,0,0,0.05)'
        }, children=[
            html.Div(style={'marginBottom': '15px'}, children=[
                html.Label("Fen√™tre d'observation :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'marginRight': '10px'
                }),
                html.Span("Ajustez la fen√™tre pour r√©v√©ler les tendances cach√©es", style={
                    'fontSize': '13px',
                    'color': '#6c757d',
                    'fontStyle': 'italic'
                })
            ]),
            
            html.Div(style={
                'display': 'flex',
                'alignItems': 'center',
                'gap': '20px',
                'marginTop': '10px'
            }, children=[
                html.Div(style={'flex': '1'}, children=[
                    dcc.Slider(
                        id='window-slider',
                        min=1, max=14, step=1, value=7,
                        marks={i: str(i) for i in [1, 7, 14]},
                        tooltip={'placement': 'bottom', 'always_visible': False},
                        updatemode='drag'
                    )
                ]),
                html.Div(style={
                    'minWidth': '80px',
                    'textAlign': 'center',
                    'backgroundColor': '#e9ecef',
                    'padding': '8px 16px',
                    'borderRadius': '20px',
                    'fontSize': '14px',
                    'fontWeight': '600',
                    'color': '#495057'
                }, children=[
                    html.Span(id='window-value')
                ])
            ])
        ])
    ])

#===== CONTR√îLES POUR LA VISUALISATION DE LA HEATMAP DES RENDEMENTS  =====
def _create_heatmap_controls(events_list): 
    """Contr√¥les pour la heatmap : dropdown evenements + slider fen√™tre.""" 
    return html.Div(className='control-group', style={'marginBottom': '30px'}, 
                    children=[ html.Div(style={ 'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'center', 
                                               'gap': '20px', 'padding': '15px', 'backgroundColor': 'white', 'borderRadius': '8px', 'boxShadow': '0 2px 4px rgba(0,0,0,0.05)' }, 
                                               children=[
                        html.Div(style={'flex': '1'}, children=[
                            html.Label("√âv√©nement s√©lectionn√©:", style={
                                'fontWeight': '500',
                                'color': '#495057',
                                'fontSize': '15px',
                                'display': 'block',
                                'marginBottom': '5px'
                            }),
                            dcc.Dropdown(
                                id='heatmap-event-dropdown',
                                options=[{'label': n, 'value': n} for n in events_list],
                                value=events_list[0] if events_list else None,
                                clearable=False,
                                style={'fontSize': '14px'}
                            ),
                        ]),
                        
                        html.Div(style={'flex': '0 0 280px'}, children=[
                            html.Label("Fen√™tre d'observation:", style={
                                'fontWeight': '500',
                                'color': '#495057',
                                'fontSize': '15px',
                                'display': 'block',
                                'marginBottom': '5px'
                            }),
                            dcc.Slider(
                                id='heatmap-window-slider',
                                min=3, max=14, step=1, value=7,
                                marks={i: f"¬±{i}" for i in [3, 5, 7, 10, 14]},
                                tooltip={'placement': 'bottom', 'always_visible': True},
                                updatemode='drag'
                            )
                        ])
                    ])
                ])

#===== CONTR√îLES POUR LA VISUALISATION DE LA VOLATILIT√â  =====
def _create_volatility_controls(events_list): 
    """Contr√¥les pour la volatilit√© : 3 √©l√©ments parfaitement align√©s horizontalement."""
    return html.Div(className='control-group', style={'marginBottom': '30px'}, children=[
        
        # Une seule ligne avec alignement parfait des labels
        html.Div(style={
            'display': 'flex',
            'justifyContent': 'space-between',
            'alignItems': 'flex-start',  # IMPORTANT: Aligne le haut des conteneurs
            'gap': '20px',
            'padding': '15px',
            'backgroundColor': 'white',
            'borderRadius': '8px',
            'boxShadow': '0 2px 4px rgba(0,0,0,0.05)'
        }, children=[
            
            # √âv√©nement √† diss√©quer
            html.Div(style={'flex': '1', 'minWidth': '200px'}, children=[
                html.Label("√âv√©nement s√©lectionn√© :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: Hauteur fixe pour alignement
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Dropdown(
                    id='volatility-event-dropdown',
                    options=[{'label': n, 'value': n} for n in events_list],
                    value=events_list[0] if events_list else None,
                    clearable=False,
                    style={'fontSize': '14px'}
                ),
            ]),
            
            # Angle d'analyse
            html.Div(style={'flex': '0 0 180px'}, children=[
                html.Label("Angle d'analyse :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: M√™me hauteur que les autres
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Dropdown(
                    id='volatility-grouping-dropdown',
                    options=[
                        {'label': 'Par r√©gion', 'value': 'region'},
                        {'label': 'Individuels', 'value': 'individual'},
                        {'label': 'Actions vs Commodit√©s', 'value': 'type'}
                    ],
                    value='region',
                    clearable=False,
                    style={'fontSize': '14px'}
                ),
            ]),
            
            # P√©riode d'√©tude
            html.Div(style={'flex': '0 0 320px'}, children=[
                html.Label("Fen√™tre d'observation :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: M√™me hauteur que les autres
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Slider(
                    id='volatility-window-slider',
                    min=3, max=14, step=1, value=7,
                    marks={i: f"¬±{i}" for i in [3, 5, 7, 10, 14]},
                    tooltip={'placement': 'bottom', 'always_visible': True},
                    updatemode='drag'
                )
            ])
        ])
    ])

#===== CONTR√îLES POUR LA CARTE CHOROPL√àTHE  =====def _create_choropleth_controls(events_list):
    """Contr√¥les pour la carte choropl√®the : 2 √©l√©ments parfaitement align√©s horizontalement."""
    return html.Div(className='control-group', style={'marginBottom': '30px'}, children=[
        html.Div(style={
            'display': 'flex',
            'justifyContent': 'space-between',
            'alignItems': 'flex-start',  # IMPORTANT: Aligne le haut des conteneurs
            'gap': '20px',
            'padding': '15px',
            'backgroundColor': 'white',
            'borderRadius': '8px',
            'boxShadow': '0 2px 4px rgba(0,0,0,0.05)'
        }, children=[
            
            # √âv√©nement mondial √† explorer
            html.Div(style={'flex': '1', 'minWidth': '250px'}, children=[
                html.Label("√âv√©nement s√©lectionn√© :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: Hauteur fixe pour alignement
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Dropdown(
                    id='choro-event-dropdown',
                    options=[{'label': n, 'value': n} for n in events_list],
                    value=events_list[-1],
                    clearable=False,
                    style={'fontSize': '14px'}
                ),
            ]),
            
            # Dur√©e d'observation
            html.Div(style={'flex': '0 0 300px'}, children=[
                html.Label("Fen√™tre d'observation :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: M√™me hauteur que l'autre
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Slider(
                    id='choro-window-slider',
                    min=1, max=14, step=1, value=5,
                    marks={i: f"{i}j" for i in [1, 3, 5, 7, 10, 14]},
                    tooltip={'placement': 'bottom', 'always_visible': True},
                    updatemode='drag'
                )
            ])
        ])
    ])

#===== CONTR√îLES POUR LA CARTE CHOROPL√àTHE  =====
def _create_choropleth_controls(events_list):
    """Contr√¥les pour la carte choropl√®the : 2 √©l√©ments parfaitement align√©s horizontalement."""
    return html.Div(className='control-group', style={'marginBottom': '30px'}, children=[
        html.Div(style={
            'display': 'flex',
            'justifyContent': 'space-between',
            'alignItems': 'flex-start',  # IMPORTANT: Aligne le haut des conteneurs
            'gap': '20px',
            'padding': '15px',
            'backgroundColor': 'white',
            'borderRadius': '8px',
            'boxShadow': '0 2px 4px rgba(0,0,0,0.05)'
        }, children=[
            
            # √âv√©nement mondial √† explorer
            html.Div(style={'flex': '1', 'minWidth': '250px'}, children=[
                html.Label("√âv√©nement mondial √† explorer :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: Hauteur fixe pour alignement
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Dropdown(
                    id='choro-event-dropdown',
                    options=[{'label': n, 'value': n} for n in events_list],
                    value=events_list[-1],
                    clearable=False,
                    style={'fontSize': '14px'}
                ),
            ]),
            
            # Dur√©e d'observation
            html.Div(style={'flex': '0 0 300px'}, children=[
                html.Label("Dur√©e d'observation :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px',
                    'height': '20px',  # FIX√â: M√™me hauteur que l'autre
                    'lineHeight': '20px'  # AJOUT√â: Alignement vertical du texte
                }),
                dcc.Slider(
                    id='choro-window-slider',
                    min=1, max=14, step=1, value=5,
                    marks={i: f"{i}j" for i in [1, 3, 5, 7, 10, 14]},
                    tooltip={'placement': 'bottom', 'always_visible': True},
                    updatemode='drag'
                )
            ])
        ])
    ])

#===== CONTR√îLES POUR LA COMPARAISON DES CRISES  =====
def _create_compare_controls(categories_list): 
    """Contr√¥les pour la comparaison : cat√©gorie + m√©trique + fen√™tre."""
    return html.Div(className='control-group', style={'marginBottom': '30px'}, 
                    children=[ html.Div(style={ 'display': 'flex', 'justifyContent': 'space-between', 'alignItems': 'center', 'gap': '20px', 'padding': '15px',
                                                'backgroundColor': 'white', 'borderRadius': '8px', 'boxShadow': '0 2px 4px rgba(0,0,0,0.05)' }, 
                                                children=[
            html.Div(style={'flex': '1'}, children=[
                html.Label("Type de crise √† analyser :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px'
                }),
                dcc.Dropdown(
                    id='compare-category-dropdown',
                    options=[{'label': cat, 'value': cat} for cat in categories_list],
                    value=categories_list[0] if categories_list else None,
                    clearable=False,
                    style={'fontSize': '14px'}
                ),
            ]),
            
            html.Div(style={'flex': '1'}, children=[
                html.Label("M√©trique d'analyse :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px'
                }),
                dcc.RadioItems(
                    id='compare-mode-radio',
                    options=[
                        {'label': ' Performance (rendements)', 'value': 'return'},
                        {'label': ' Nervosit√© (volatilit√©)', 'value': 'volatility'}
                    ],
                    value='return',
                    style={'fontSize': '14px'},
                    labelStyle={'display': 'block', 'marginBottom': '5px'}
                )
            ]),
            
            html.Div(style={'flex': '0 0 280px'}, children=[
                html.Label("Fen√™tre d'impact :", style={
                    'fontWeight': '500',
                    'color': '#495057',
                    'fontSize': '15px',
                    'display': 'block',
                    'marginBottom': '5px'
                }),
                dcc.Slider(
                    id='compare-window-slider',
                    min=0, max=14, step=1, value=0,
                    marks={
                        0: 'Jour J',
                        1: '¬±1j',
                        3: '¬±3j', 
                        5: '¬±5j',
                        7: '¬±7j',
                        10: '¬±10j',
                        14: '¬±14j'
                    },
                    tooltip={'placement': 'bottom', 'always_visible': True},
                    updatemode='drag'
                )
            ])
        ])
    ])



# =================================================================================== FONCTIONS ANNEXES  ========================================================================================

def _create_event_item(name, description):
    """Cr√©e un √©l√©ment de liste d'√©v√©nement avec tooltip."""
    return html.Li([
        html.Span("‚Ä¢ ", style={'marginRight': '8px', 'color': '#e74c3c'}),
        html.Span(name, style={'marginRight': '8px'}),
        html.Span("‚ÑπÔ∏è", style={
            'fontSize': '12px',
            'cursor': 'pointer',
            'color': '#3498db',
            'position': 'relative'
        }, title=description)
    ], style={
        'marginBottom': '6px',
        'display': 'flex',
        'alignItems': 'center'
    })

def _create_index_item(name, description):
    """Cr√©e un √©l√©ment de liste d'indice avec tooltip."""
    return html.Li([
        html.Span("‚Ä¢ ", style={'marginRight': '8px', 'color': '#3498db'}),
        html.Span(name, style={'marginRight': '8px'}),
        html.Span("‚ÑπÔ∏è", style={
            'fontSize': '12px',
            'cursor': 'pointer',
            'color': '#e67e22',
            'position': 'relative'
        }, title=description)
    ], style={
        'marginBottom': '6px',
        'display': 'flex',
        'alignItems': 'center'
    })

def _create_ordered_ticker_options(tickers_list):
    """Cr√©e les options du dropdown dans l'ordre exact de l'introduction."""
    
    # Ordre exact de l'introduction
    ordered_tickers = [
        ('000001.SS', 'Shanghai Composite (000001.SS)'),
        ('^BSESN', 'BSE Sensex (^BSESN)'),
        ('^NSEI', 'Nifty 50 (^NSEI)'),
        ('^N225', 'Nikkei 225 (^N225)'),
        ('^DJI', 'Dow Jones (^DJI)'),
        ('^GSPC', 'S&P 500 (^GSPC)'),
        ('^IXIC', 'NASDAQ Composite (^IXIC)'),
        ('^NYA', 'NYSE Composite (^NYA)'),
        ('^FTSE', 'FTSE 100 (^FTSE)'),
        ('^N100', 'Euronext 100 (^N100)'),
        ('GC=F', 'Or Futures (GC=F)'),
        ('CL=F', 'P√©trole Futures (CL=F)')
    ]
    
    # Cr√©er les options seulement pour les tickers disponibles, dans l'ordre voulu
    options = []
    for ticker_code, display_name in ordered_tickers:
        if ticker_code in tickers_list:
            options.append({
                'label': display_name,
                'value': ticker_code
            })
    
    return options

def _get_first_available_ticker(tickers_list):
    """Retourne le premier ticker disponible selon l'ordre de l'introduction."""
    
    # Ordre de priorit√© (m√™me que l'introduction)
    priority_order = [
        '000001.SS', '^BSESN', '^NSEI', '^N225', '^DJI', '^GSPC', 
        '^IXIC', '^NYA', '^FTSE', '^N100', 'GC=F', 'CL=F'
    ]
    
    # Retourner le premier ticker trouv√© dans l'ordre de priorit√©
    for ticker in priority_order:
        if ticker in tickers_list:
            return ticker
    
    # Fallback au premier ticker disponible si aucun de l'ordre n'est trouv√©
    return tickers_list[0] if tickers_list else None

